/*!
 *  Bayrell Bundler
 *
 *  (c) Copyright 2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.Bundler;

use Runtime.Task.TaskList;
use Runtime.Task.TaskMethod;
use Bayrell.Bundler.BundlerHelper;


@TaskList{}
class Tasks
{
	
	/**
	 * Watch changes
	 */
	@TaskMethod{ "alias": "watch" }
	static async void watch()
	{
	}
	
	
	
	/**
	 * Build project
	 */
	@TaskMethod{ "alias": "build" }
	static async void build()
	{
	}
	
	
	
	/**
	 * Show modules
	 */
	@TaskMethod{ "alias": "modules" }
	static async void modules()
	{
	}
	
	
	
	/**
	 * Make symlink
	 */
	@TaskMethod{ "alias": "make_symlink" }
	static async void make_symlink()
	{
	}
	
	
	
	/**
	 * Make symlinks
	 */
	@TaskMethod{ "alias": "make_symlinks" }
	static async void make_symlinks()
	{
	}
	
	
	
	/**
	 * Make module
	 */
	@TaskMethod{ "alias": "make" }
	static async void make()
	{
		int sz = @.cli_args.count();
		string module_name = @.cli_args.get(2, "");
		/*
		var file;
		file = @ -> await method chainAwait(BundlerHelper::BUILD_FILE, [ file ]);*/
	}
	
	
	
	/**
	 * Make all modules
	 */
	@TaskMethod{ "alias": "make_all" }
	static async void make_all()
	{
	}
	
}

